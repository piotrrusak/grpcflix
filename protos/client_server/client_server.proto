syntax = "proto3";
package video;

service ClientServerService {
  rpc Stream(stream ClientServerMessage) returns (stream ServerClientMessage);
}

message ClientServerMessage {
  oneof payload {
    ClientStartRequest client_start_request = 1;
    ClientStopRequest client_stop_request = 2;
    ClientPauseRequest client_pause_request = 3;
    ClientUnpauseRequest client_unpause_request = 4;
    ClientServerHeartbeat heartbeat = 5;
    ClientStatusAnswer client_status_answer = 6;
    ClientChooseSourceAnswer client_choose_source_answer = 7;
    ClientUploadStart client_upload_start = 8;
    ClientUploadChunk client_upload_chunk = 9;
    ClientUploadEnd client_upload_end = 10;
  }
}

message ServerClientMessage {
  oneof payload {
    ServerClientInfo info = 1;
    ServerClientChunk chunk = 2;
    ServerPauseRequest server_pause_request = 3;
    ServerUnpauseRequest server_unpause_request = 4;
    ServerClientHeartbeat heartbeat = 5;
    ServerStatusRequest server_status_request = 6;
    ServerChooseSourceRequest server_choose_source_request = 7;
  }
}

message ClientUploadStart {

}

message ClientUploadChunk {
  bytes chunk = 1;
}

message ClientUploadEnd {
  string filename = 1;
}

message ServerChooseSourceRequest {

}

message ClientChooseSourceAnswer {
  string source = 1;
}

message ServerStatusRequest {
  
}

message ClientStatusAnswer {
  string frame_id = 1;
}

message ClientServerHeartbeat {

}

message ServerClientHeartbeat {

}

message ServerPauseRequest {
  string frame_id = 1;
}

message ServerUnpauseRequest {
  string frame_id = 1;
}

message ClientStartRequest {
  
}

message ClientStopRequest {

}

message ClientPauseRequest {
  string frame_id = 1;
}

message ClientUnpauseRequest {
  string frame_id = 1;
}

message ServerClientChunk {
  bytes chunk = 1;
}

message ServerClientInfo {
  string info = 1;
}